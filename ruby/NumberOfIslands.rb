# @param {Character[][]} grid
# @return {Integer}
def num_islands(grid)
  row_len = grid.length
  col_len = grid[0].length
  islands = 0

  (0..row_len-1).each do |row|
    (0..col_len-1).each do |col|
      # if we encounter land, find its covering area
      if grid[row][col] == "1"
        grid[row][col] = 9
        islands = islands + 1
        find_adjacent_land(row, col, grid, row_len, col_len)
      end
    end
  end

  puts islands
  islands
end

def find_adjacent_land(row, col, grid, row_len, col_len)
  grid[row][col] = 9
  directions = [[0,1], [1, 0], [0, -1], [-1, 0]]
  directions.each do |direction|
    row_diff, col_diff = direction
    r, c = row + row_diff, col + col_diff
    if r >= 0 &&  c >= 0 && r < row_len && c < col_len && grid[r][c] == "1"
      find_adjacent_land(r, c, grid, row_len, col_len)
    end
  end
end


grid = [["1","0","0","1","1","1","0","1","1","0","0","0","0","0","0","0","0","0","0","0"],
 ["1","0","0","1","1","0","0","1","0","0","0","1","0","1","0","1","0","0","1","0"],
 ["0","0","0","1","1","1","1","0","1","0","1","1","0","0","0","0","1","0","1","0"],
 ["0","0","0","1","1","0","0","1","0","0","0","1","1","1","0","0","1","0","0","1"],
 ["0","0","0","0","0","0","0","1","1","1","0","0","0","0","0","0","0","0","0","0"],
 ["1","0","0","0","0","1","0","1","0","1","1","0","0","0","0","0","0","1","0","1"],
 ["0","0","0","1","0","0","0","1","0","1","0","1","0","1","0","1","0","1","0","1"],
 ["0","0","0","1","0","1","0","0","1","1","0","1","0","1","1","0","1","1","1","0"],
 ["0","0","0","0","1","0","0","1","1","0","0","0","0","1","0","0","0","1","0","1"],
 ["0","0","1","0","0","1","0","0","0","0","0","1","0","0","1","0","0","0","1","0"],
 ["1","0","0","1","0","0","0","0","0","0","0","1","0","0","1","0","1","0","1","0"],
 ["0","1","0","0","0","1","0","1","0","1","1","0","1","1","1","0","1","1","0","0"],
 ["1","1","0","1","0","0","0","0","1","0","0","0","0","0","0","1","0","0","0","1"],
 ["0","1","0","0","1","1","1","0","0","0","1","1","1","1","1","0","1","0","0","0"],
 ["0","0","1","1","1","0","0","0","1","1","0","0","0","1","0","1","0","0","0","0"],
 ["1","0","0","1","0","1","0","0","0","0","1","0","0","0","1","0","1","0","1","1"],
 ["1","0","1","0","0","0","0","0","0","1","0","0","0","1","0","1","0","0","0","0"],
 ["0","1","1","0","0","0","1","1","1","0","1","0","1","0","1","1","1","1","0","0"],
 ["0","1","0","0","0","0","1","1","0","0","1","0","1","0","0","1","0","0","1","1"],
 ["0","0","0","0","0","0","1","1","1","1","0","1","0","0","0","1","1","0","0","0"]]
num_islands(grid)